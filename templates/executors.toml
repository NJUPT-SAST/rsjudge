[bash]
execute = "/usr/bin/bash -r --no-profile --no-rc {src_file}"

[c]
# Example $flags: "-O2 -lm -Wall -std=c99"
compile = "/usr/bin/gcc {flags} -o {out_file} {src_file}"

[cpp]
# Example $flags: "-O2 -lm -Wall -std=c++14"
compile = "/usr/bin/g++ {flags} -o {out_file} {src_file}"

[csharp]
# Only mono is supported now, .NET SDK is under development.
out_rename = "Program.exe"
compile = "/usr/bin/mcs -o+ -out:{out_file} {src_file}"
execute = "/usr/bin/mono {out_file}"

[java]
# $java_home should be set to the directory containing the bin/ directory of the target java version
src_rename = "Main.java"
out_rename = "Main.jar"
compile = "{java_home}/bin/javac Main.java && {java_home}/bin/jar -cvfe Main.jar Main ./*.class && rm -rf ./*.class"
execute = "{java_home}/bin/java -jar Main.jar"

[nodejs]
execute = "{node_path}/node {src_file}"

[python3]
execute = "/usr/bin/python3 -OO {src_file}"

[pypy3]
execute = "/usr/bin/pypy3 -OO {src_file}"

[rust]
compile = "{rustc_path}/rustc -O -o {out_file} {src_file}"

[scala]
# $scala_home and $java_home should be set to the directory containing the bin/ directory of the target scala version
src_rename = "Main.scala"
out_rename = "Main.jar"
compile = "{scala_home}/bin/scalac Main.scala && {java_home}/bin/jar -cvfe Main.jar Main ./*.class && rm -rf ./*.class"
execute = "{java_home}/bin/java -jar Main.jar"

[typescript]
compile = "{tsc_path}/tsc {src_file} --outFile {out_file}"
execute = "{node_path}/node {out_file}"
